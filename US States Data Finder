/*
*Author: Sara Goodie
*Creation Date: 4/12/2023
*Modification Date: 4/12/2023
*Purpose: overall purpose of the code is to allow the user to search
 information about the US states using either state abbreviation or
 year of statehood.
*/


#include "state.h"
#include <iostream>
#include <fstream>
#include <vector>
#include <iomanip>
#include <string>
#include <sstream>


using namespace std;

//prototypes
void readStateInfo(ifstream &ifs, vector<State> & stateVec);
void searchByStatehood(vector <State> & stVec, int year, int & startIndex);
int searchByAbrv(vector <State> & stVec, string abrv);
void displayMenu();
void displayTableHeader();





int main()
{

	vector <State> stateVec;
    ifstream ifs;

    ifs.open("usastates.txt");

    if (!ifs.is_open()) {
        cerr << "Unable to open file\n";
        return 0;
    }

    readStateInfo(ifs, stateVec);

    cout << stateVec.size();

    int choice, index, year;
    string abrv;

    do {
        displayMenu();
        cin >> choice;

        switch (choice) {
        case 1:
            cout << "Enter state abbreviation: ";
            cin >> abrv;
            index = searchByAbrv(stateVec, abrv);

            if (index == -1) {
                cout << "\nNo state exists with this information\n";
            }
            else {
                displayTableHeader();
                stateVec[index].displayStateInfo();
            }

            break;

        case 2:
            cout << "Enter year of statehood: ";
            cin >> year;

            searchByStatehood(stateVec, year, index);

            if (index == 0) {
                cout << "\nNo state exists with this information\n";
            }

            break;

        case 3:
            cout << "Exiting program..." << endl;
            break;

        default:
            cout << choice << " is not a valid choice\n";
            cout << "Please try again\n";
            break;
        }
    } while (choice != 3);

    ifs.close();




	return 0;

}


void displayTableHeader()
{
	//Display table header:
	cout << endl;

	cout << right << setw(20) << "State Abr." <<   setw(20) << "Name" <<  setw(20) << "Capital"
		 <<  setw(20) << "Population" <<  setw(11) << "Year" <<  setw(15) << "#Congress" << endl;
	
	cout << endl;

}

void readStateInfo(ifstream& ifs, vector<State>& stateVec)
{
    //declarations
    State tmpState;
    string abrv, sName, capital;
    string pop, year, congress;

    while (!ifs.eof())
    {

        //getline(ifs, abrv, ',');
        getline(ifs, abrv, ',');
        getline(ifs, sName, ',');
        getline(ifs, capital, ',');
        getline(ifs, pop, ',');
        getline(ifs, year, ',');
        getline(ifs, congress);


        //use tmpState.<method> and passing variables into the object through the method
        tmpState.setStateAbrv(abrv);
        tmpState.setStateName(sName);
        tmpState.setCapital(capital);
        tmpState.setPopulation(stoi(pop));
        tmpState.setYear(stoi(year));
        tmpState.setNumCongress(stoi(congress));

        //add the object to the vector
        stateVec.push_back(tmpState);
    }
}




int searchByAbrv(vector <State> & stVec, string abrv)
{

	//return index of object within the vector if found
    for (int i = 0; i < stVec.size(); i++) {
        if (abrv == stVec[i].getStateAbrv()) {
            return i;
        }
    }

	//return -1 if not found

	return -1;

}


void searchByStatehood(vector <State> & stVec, int year, int & startIndex)
{
    startIndex = 0;
    displayTableHeader();

    for (int i = 0; i < stVec.size(); i++) {
        if (year == stVec[i].getYear()) {
            stVec[i].displayStateInfo();
            startIndex++;
        }
    }


}


void displayMenu()
{
    cout << "\n1. Search by state abbreviation (e.g. MI). \n"
        << "2. Search by year of statehood (e.g. 1837). \n"
        << "3. Exit program. \n"
        << "\nPlease enter your choice (1-3): " << endl;
}




-------------------------------------------------------------------------------


/*
*Author: Sara Goodie
*Creation Date: 4/12/2023
*Modification Date: 4/12/2023
*Purpose: The purpose of this code defines the implementation of the state class,
* which represents info about a state in the USA. It includes state abrv, 
* name, capital, population, year of statehood, and number of 
* congressional representatives. 
*/

#include "state.h"
#include <iostream>
#include <vector>
#include <iomanip>
#include <string>

using namespace std;

State::State()
{
	stateAbrv = "";
	stateName = "";
	capital = "";
	population = 0;
	year = 0;
	numCongress = 0;

}

void State::setStateAbrv(string abrv)
{
	stateAbrv = abrv;
}


void State::setStateName(string sName)
{
	stateName = sName;
}

void State::setCapital(string cap)
{
	capital = cap; 
}

void State::setPopulation(int pop)
{
	population = pop; 
}

void State::setYear(int y)
{
	year = y;
}

void State::setNumCongress(int num)
{
	numCongress = num;
}


string State::getStateAbrv()
{
	return stateAbrv; 
}


string State::getStateName()
{
	return stateName;
}


string State::getCapital()
{
	return capital;
}


int State::getPopulation()
{
	return population;
}



int State::getYear()
{
	return year;
}


int State::getNumCongress()
{
	return numCongress; 
}


int State::computeResidentsPerRep()
{
	return population / numCongress;
}


void State::displayStateInfo()
{
	cout << right << setw(20) << stateAbrv << setw(20) << stateName << setw(20) << capital
		<< setw(20) << population << setw(11) << year << setw(15) << numCongress << endl;

}



-------------------------------------------------------------------------------


txt file: 

AL,Alabama,Montgomery,4859000,1819,7
AK,Alaska,Juneau,739000,1959,1
AZ,Arizona,Phoenix,6829000,1912,9
AR,Arkansas,Little Rock,2979000,1836,4
CA,California,Sacramento,39145000,1850,53
CO,Colorado,Denver,5457000,1876,7
CT,Connecticut,Hartford,3591000,1788,5
DE,Delaware,Dover,946000,1787,1
FL,Florida,Tallahassee,20272000,1845,27
GA,Georgia,Atlanta,10215000,1788,14
HI,Hawaii,Honolulu,1432000,1959,2
ID,Idaho,Boise,1655000,1890,2
IL,Illinois,Springfield,12860000,1818,18
IN,Indiana,Indianapolis,6620000,1816,9
IA,Iowa,Des Moines,3124000,1846,4
KS,Kansas,Topeka,2912000,1861,4
KY,Kentucky,Frankfort,4426000,1792,6
LA,Louisiana,Baton Rouge,4671000,1812,6
ME,Maine,Augusta,1330000,1820,2
MD,Maryland,Annapolis,6007000,1788,8
MA,Massachusetts,Boston,6795000,1788,9
MI,Michigan,Lansing,9923000,1837,14
MN,Minnesota,St. Paul,5490000,1858,8
MS,Mississippi,Jackson,2993000,1817,4
MO,Missouri,Jefferson City,6084000,1821,8
MT,Montana,Helena,1033000,1889,1
NE,Nebraska,Lincoln,1897000,1867,3
NV,Nevada,Carson City,2891000,1864,4
NH,New Hampshire,Concord,1331000,1788,2
NJ,New Jersey,Trenton,8959000,1787,12
NM,New Mexico,Santa Fe,2086000,1912,3
NY,New York,Albany,19796000,1788,27
NC,North Carolina,Raleigh,10043000,1789,13
ND,North Dakota,Bismarck,757000,1889,1
OH,Ohio,Columbus,11614000,1803,16
OK,Oklahoma,Oklahoma City,3912000,1907,5
OR,Oregon,Salem,4029000,1859,5
PA,Pennsylvania,Harrisburg,12803000,1787,18
RI,Rhode Island,Providence,1057000,1790,2
SC,South Carolina,Columbia,4897000,1788,7
SD,South Dakota,Pierre,859000,1889,1
TN,Tennessee,Nashville,6601000,1796,9
TX,Texas,Austin,27470000,1845,36
UT,Utah,Salt Lake City,2996000,1896,4
VT,Vermont,Montpelier,627000,1791,1
VA,Virginia,Richmond,8383000,1788,11
WA,Washington,Olympia,7171000,1889,10
WV,West Virginia,Charleston,1845000,1863,3
WI,Wisconsin,Madison,5772000,1848,8
WY,Wyoming,Cheyenne,587000,1890,1



